{
    "Available Crypto Currencies": "Available Crypto Currencies",
    "Total coins": "Total coins",
    "look up coin": "Look up coin",
    "Price": "Price",
    "Change": "Change",
    "Favorite Coins": "Favorite Coins",
    "No favorite coins added yet.": "No favorite coins added yet.",
    "Add coins to your favorites to see them here.": "Add coins to your favorites to see them here.",
    "General Info": "General Info",
    "Coin Name": "Coin Name",
    "Market Cap Rank": "Market Cap Rank",
    "Origin": "Origin",
    "Contract Address": "Contract Address",
    "Hashing Algorithm": "Hashing Algorithm",
    "Genesis Date": "Genesis Date",
    "Last Updated": "Last Updated",
    "Scores": "Scores",
    "Community Score": "Community Score",
    "Developer Score": "Developer Score",
    "Liquidity Score": "Liquidity Score",
    "Public Interest Score": "Public Interest Score",
    "Not Available": "Not Available",
    "Basic Questions": "Basic Questions",
    "Advanced Questions": "Advanced Questions",
    "What is accessibility?": "What is accessibility?",
    "HTML: A good basis for accessibility?": "HTML: A good basis for accessibility?",
    "CSS and JavaScript accessibility best practices?": "CSS and JavaScript accessibility best practices?",
    "WAI-ARIA basics?": "WAI-ARIA basics?",
    "Accessible multimedia?": "Accessible multimedia?",
    "Mobile accessibility?": "Mobile accessibility?",
    "Home": "Home",
    "Favorite": "Favorite",
    "About": "About",
    "vacio":"there are no coins",
    "accessibility_content": "This article starts off the module with a good look at what accessibility is — this includes what groups of people we need to consider and why, what tools different people use to interact with the web, and how we can make accessibility part of our web development workflow.",
    "html_accessibility_content": "A great deal of web content can be made accessible just by making sure the correct HTML elements are always used for the correct purpose.",
    "css_js_accessibility_content": "CSS and JavaScript, when used properly, also have the potential to allow for accessible web experiences, but if misused they can significantly harm accessibility. This article outlines some CSS and JavaScript best practices that should be considered to ensure that even complex content is as accessible as possible.",
    "wai_aria_content": "Following on from the previous article, sometimes making complex UI controls that involve unsemantic HTML and dynamic JavaScript-updated content can be difficult. WAI-ARIA is a technology that can help with such problems by adding in further semantics that browsers and assistive technologies can recognize and use to let users know what is going on. Here we'll show how to use it at a basic level to improve accessibility.",
    "multimedia_content": "Another category of content that can create accessibility problems is multimedia — video, audio, and image content need to be given proper textual alternatives, so they can be understood by assistive technologies and their users. This article shows how.",
    "mobile_content": "With web access on mobile devices being so popular, and popular platforms such as iOS and Android."
}